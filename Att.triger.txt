trigger Attachment_tgr on Attachment (after delete, after insert) {
    
    if(trigger.isInsert){
        
        Set<Id> parentId = new Set<Id>();
        for (Attachment at:Trigger.New){
            if (at.ContentType!=null && at.ContentType.contains('image')) parentId.add(at.ParentId);
        }
        
        List<PF002_ReporteVisita__c> listaRP = [select id, PF002_ca_ArchivosAdjuntos__c from PF002_ReporteVisita__c where Id IN: parentId];
        
        for (PF002_ReporteVisita__c rp: listaRP) rp.PF002_ca_ArchivosAdjuntos__c = True;
        
        if (listaRP.size() > 0) update listaRP ;
    }
    
    if(trigger.isdelete){
        
        Set<Id> parentId = new Set<Id>();
        for (Attachment at:Trigger.Old){
            if (at.ContentType.contains('image')) parentId.add(at.ParentId);
        }
        
        List<PF002_ReporteVisita__c> listaRP = [select id, PF002_ca_ArchivosAdjuntos__c,PF002_ca_VoboDO__c, (select Id, ContentType from Attachments) from PF002_ReporteVisita__c where Id IN: parentId];       
        List<PF002_ReporteVisita__c> toUpdate = new List<PF002_ReporteVisita__c>();
        
        Boolean hasImage = false;
        for (PF002_ReporteVisita__c rp: listaRP) {           
            if (!rp.PF002_ca_VoboDO__c){
                hasImage = false;
                for (Attachment at : rp.Attachments){
                    if (at.ContentType.contains('image')) 
                        hasImage=true;
                }
                if (!hasImage) {
                    rp.PF002_ca_ArchivosAdjuntos__c = False;
                    toUpdate.add(rp);
                }
            }else{
                throw new PFLeanException ('El reporte de visita no se le puede eliminar documentos');
            }                       
        }
        if (toUpdate.size() > 0) update toUpdate;
    }
}